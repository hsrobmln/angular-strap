{"version":3,"sources":["date-formatter.min.js","helpers/date-formatter.js"],"names":["angular","module","service","$locale","dateFilter","splitTimeFormat","format","exec","slice","this","getDefaultLocale","id","getDatetimeFormat","lang","DATETIME_FORMATS","weekdaysShort","SHORTDAY","hoursFormat","timeFormat","minutesFormat","secondsFormat","timeSeparator","showSeconds","showAM","formatDate","date","timezone"],"mappings":"AAOA,YAEAA,SAAQC,OAAO,2CAEZC,QCAM,kBAAmB,UAAW,aAAA,SAAAC,EAAAC,GDqBnC,QAASC,GAAgBC,GACvB,MAAO,wCAAwCC,KAAKD,GAAQE,MAAM,GAfpEC,KCAEC,iBAAe,WDCf,MAAOP,GAAQQ,IAKjBF,KAAKG,kBAAoB,SAASN,EAAQO,GCC1C,MAASV,GAAAW,iBAAwBR,IAAAA,GDGjCG,KAAKM,cAAgB,SAASF,GAC5B,MAAOV,GAAQW,iBAAiBE,UAQlCP,KAAKQ,YAAc,SAASC,GAC1B,MAAOb,GAAgBa,GAAY,IAIrCT,KAAKU,cAAgB,SAASD,GAC5B,MAAOb,GAAgBa,GAAY,IAIrCT,KAAKW,cAAgB,SAASF,GAC5B,MAAOb,GAAgBa,GAAY,IAIrCT,KAAKY,cAAgB,SAASH,GAC5B,MAAOb,GAAgBa,GAAY,IAIrCT,KAAKa,YAAc,SAASJ,GAC1B,QAASb,EAAgBa,GAAY,IAIvCT,KAAKc,OAAS,SAASL,GACrB,QAASb,EAAgBa,GAAY,IAGvCT,KAAKe,WAAa,SAASC,EAAMnB,EAAQO,EAAMa,GAC7C,MAAOtB,GAAWqB,EAAMnB,EAAQoB","file":"date-formatter.min.js","sourcesContent":[null,"'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.helpers.dateFormatter', [])\r\n\r\n  .service('$dateFormatter', function($locale, dateFilter) {\r\n\r\n    // The unused `lang` arguments are on purpose. The default implementation does not\r\n    // use them and it always uses the locale loaded into the `$locale` service.\r\n    // Custom implementations might use it, thus allowing different directives to\r\n    // have different languages.\r\n\r\n    this.getDefaultLocale = function() {\r\n      return $locale.id;\r\n    };\r\n\r\n    // Format is either a data format name, e.g. \"shortTime\" or \"fullDate\", or a date format\r\n    // Return either the corresponding date format or the given date format.\r\n    this.getDatetimeFormat = function(format, lang) {\r\n      return $locale.DATETIME_FORMATS[format] || format;\r\n    };\r\n\r\n    this.weekdaysShort = function(lang) {\r\n      return $locale.DATETIME_FORMATS.SHORTDAY;\r\n    };\r\n\r\n    function splitTimeFormat(format) {\r\n      return /(h+)([:\\.])?(m+)([:\\.])?(s*)[ ]?(a?)/i.exec(format).slice(1);\r\n    }\r\n\r\n    // h:mm a => h\r\n    this.hoursFormat = function(timeFormat) {\r\n      return splitTimeFormat(timeFormat)[0];\r\n    };\r\n\r\n    // h:mm a => mm\r\n    this.minutesFormat = function(timeFormat) {\r\n      return splitTimeFormat(timeFormat)[2];\r\n    };\r\n\r\n    // h:mm:ss a => ss\r\n    this.secondsFormat = function(timeFormat) {\r\n      return splitTimeFormat(timeFormat)[4];\r\n    };\r\n\r\n    // h:mm a => :\r\n    this.timeSeparator = function(timeFormat) {\r\n      return splitTimeFormat(timeFormat)[1];\r\n    };\r\n\r\n    // h:mm:ss a => true, h:mm a => false\r\n    this.showSeconds = function(timeFormat) {\r\n      return !!splitTimeFormat(timeFormat)[4];\r\n    };\r\n\r\n    // h:mm a => true, H.mm => false\r\n    this.showAM = function(timeFormat) {\r\n      return !!splitTimeFormat(timeFormat)[5];\r\n    };\r\n\r\n    this.formatDate = function(date, format, lang, timezone){\r\n      return dateFilter(date, format, timezone);\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}