{"version":3,"sources":["dropdown.min.js","dropdown/dropdown.js"],"names":["angular","module","provider","defaults","this","animation","prefixClass","prefixEvent","placement","template","trigger","container","keyboard","html","delay","$get","$window","$rootScope","$tooltip","$timeout","DropdownFactory","element","config","onBodyClick","evt","target","$dropdown","hide","options","extend","$scope","scope","$new","parentEl","parent","$onKeyDown","test","keyCode","preventDefault","stopPropagation","items","$element","querySelectorAll","length","index","forEach","el","i","matchesSelector","call","isUndefined","eq","focus","show","on","bodyEl","hasClass","addClass","$isShown","off","removeClass","destroy","document","body","Element","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","directive","$sce","restrict","link","attr","transclusion","key","isDefined","falseValueRegExp","bsDropdown","$watch","newValue","oldValue","content","bsShow","dropdown","isString","match","$on"],"mappings":"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","file":"dropdown.min.js","sourcesContent":[null,"'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$dropdown', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'dropdown',\r\n      prefixEvent: 'dropdown',\r\n      placement: 'bottom-left',\r\n      template: 'dropdown/dropdown.tpl.html',\r\n      trigger: 'click',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = function($window, $rootScope, $tooltip, $timeout) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\r\n\r\n      function DropdownFactory(element, config) {\r\n\r\n        var $dropdown = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        var scope = $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        $dropdown = $tooltip(element, options);\r\n        var parentEl = element.parent();\r\n\r\n        // Protected methods\r\n\r\n        $dropdown.$onKeyDown = function(evt) {\r\n          if (!/(38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Retrieve focused index\r\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n          if(!items.length) return;\r\n          var index;\r\n          angular.forEach(items, function(el, i) {\r\n            if(matchesSelector && matchesSelector.call(el, ':focus')) index = i;\r\n          });\r\n\r\n          // Navigate with keyboard\r\n          if(evt.keyCode === 38 && index > 0) index--;\r\n          else if(evt.keyCode === 40 && index < items.length - 1) index++;\r\n          else if(angular.isUndefined(index)) index = 0;\r\n          items.eq(index)[0].focus();\r\n\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var show = $dropdown.show;\r\n        $dropdown.show = function() {\r\n          show();\r\n          // use timeout to hookup the events to prevent\r\n          // event bubbling from being processed imediately.\r\n          $timeout(function() {\r\n            options.keyboard && $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\r\n            bodyEl.on('click', onBodyClick);\r\n          }, 0, false);\r\n          parentEl.hasClass('dropdown') && parentEl.addClass('open');\r\n        };\r\n\r\n        var hide = $dropdown.hide;\r\n        $dropdown.hide = function() {\r\n          if(!$dropdown.$isShown) return;\r\n          options.keyboard && $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\r\n          bodyEl.off('click', onBodyClick);\r\n          parentEl.hasClass('dropdown') && parentEl.removeClass('open');\r\n          hide();\r\n        };\r\n\r\n        var destroy = $dropdown.destroy;\r\n        $dropdown.destroy = function() {\r\n          bodyEl.off('click', onBodyClick);\r\n          destroy();\r\n        };\r\n\r\n        // Private functions\r\n\r\n        function onBodyClick(evt) {\r\n          if(evt.target === element[0]) return;\r\n          return evt.target !== element[0] && $dropdown.hide();\r\n        }\r\n\r\n        return $dropdown;\r\n\r\n      }\r\n\r\n      return DropdownFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsDropdown', function($window, $sce, $dropdown) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'id'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['html', 'container'], function(key) {\r\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\r\n            options[key] = false;\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsDropdown && scope.$watch(attr.bsDropdown, function(newValue, oldValue) {\r\n          scope.content = newValue;\r\n        }, true);\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!dropdown || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\r\n          newValue === true ? dropdown.show() : dropdown.hide();\r\n        });\r\n\r\n        // Initialize dropdown\r\n        var dropdown = $dropdown(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (dropdown) dropdown.destroy();\r\n          options = null;\r\n          dropdown = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}