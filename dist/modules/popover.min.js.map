{"version":3,"sources":["popover.min.js","popover/popover.js"],"names":["angular","module","provider","defaults","this","animation","customClass","container","target","placement","template","contentTemplate","trigger","keyboard","html","title","content","delay","autoClose","$get","$tooltip","PopoverFactory","element","config","options","extend","$popover","$scope","directive","$window","$sce","requestAnimationFrame","setTimeout","restrict","scope","link","attr","forEach","key","isDefined","falseValueRegExp","test","dataTarget","$observe","newValue","oldValue","trustAsHtml","popover","$applyPlacement","bsPopover","$watch","isObject","bsShow","isString","match","show","hide","viewport","setViewport","$on","destroy"],"mappings":"AAOA,YAEAA,SAAQC,OAAO,0BAA2B,2BAEvCC,SAAS,WAAY,WAEpB,GCAEC,GAAQC,KAAAD,UACRE,UAAW,UACXC,YAAU,GAIVC,WAAM,EACNC,QAAO,EACPC,UAAS,QACTC,SAAO,2BACPC,iBAAW,EDCXC,QAAS,QACTC,UAAU,ECCZC,MAAK,EDCHC,MAAO,GCCPC,QAAS,GDCTC,MAAO,EACPC,WAAW,EAGbd,MCAIe,MAAI,WAAW,SAASC,GDE1B,QAASC,GAAeC,EAASC,GAG/B,GAAIC,GAAUxB,QAAQyB,UAAWtB,EAAUoB,GCE3CG,EAAON,EAAAE,EAAAE,EDOP,OAJGA,GAAQR,UCCbU,EAAOC,OAAAX,QAAAQ,EAAAR,SDGEU,EAIT,MAAOL,OAMVO,UCAS,aAAS,UAAgB,OAAS,WAAM,SAAAC,EAAAC,EAAAJ,GDEhD,GAAIK,GAAwBF,EAAQE,uBAAyBF,EAAQG,UAErE,QACEC,SCAO,MDCPC,OAAO,EACPC,KAAM,SAAkBD,EAAOZ,EAASc,GCGtC,GAAAZ,IAAQU,MAASA,EDCjBlC,SCAKqC,SAAQ,WAAe,kBAAS,YAAsB,YAAK,QAAA,UAAA,OAAA,YAAA,cAAA,YAAA,KAAA,cAAA,eAAA,SAAAC,GAC5DtC,QAAQuC,UAAOH,EAAAE,MAAAd,EAAAc,GAAAF,EAAAE,KAInB,IAAIE,GAAa,eACjBxC,SAAGqC,SAAQ,OAAU,YAAa,aAAA,SAAAC,GAC7BtC,QAAAuC,UAAiBH,EAAKE,KAAAE,EAAAC,KAAAL,EAAAE,MACvBd,EAAQc,IAAA,IDIZ,IAAII,GAAapB,EAAQc,KAAK,cAC3BpC,SAAQuC,UAAUG,KCEnBlB,EAAKhB,OADPgC,EAAiBC,KAASC,IACN,EAERA,GDIZ1C,QAAQqC,SAAS,QAAS,WAAY,SAASC,GAC7CF,EAAKE,IAAQF,EAAKO,SAASL,EAAK,SAASM,EAAUC,GACjDX,EAAMI,GAAOR,EAAKgB,YAAYF,GCClC5C,QAAKuC,UAAaM,IAAad,EAAyB,WACnDgB,GAAQA,EAASC,wBDMtBZ,ECAIa,WAAWf,EAAQgB,OAAAd,EAAAa,UAAA,SAAAL,EAAAC,GDClB7C,QAAQmD,SAASP,GCCnB5C,QAAAyB,OAAAS,EAAAU,GDECV,EAAMlB,QAAU4B,ECElB5C,QAAIuC,UAAYM,IAAQd,EAAqB,WAC7CgB,GAAWA,EAASC,sBDEnB,GCGHZ,EAAKgB,QAAAlB,EAAYgB,OAAMd,EAAOgB,OAAK,SAAUR,EAAUC,GACjDE,GAAY/C,QAAQuC,UAAUK,KAClC5C,QAAQqD,SAAYT,KAAAA,IAAAA,EAAAU,MAAA,wBDCpBV,KAAa,EAAOG,EAAQQ,OAASR,EAAQS,UAI/CpB,EAAKqB,UAAYvB,EAAMgB,OAAOd,EAAKqB,SAAU,SAAUb,GACjDG,GAAY/C,QAAQuC,UAAUK,ICCpCG,EAAUW,YAAYd,IDItB,IAAIG,GAAUrB,EAASJ,EAASE,EAGhCU,GAAMyB,IAAI,WAAY,WAChBZ,GAASA,EAAQa,UACrBpC,EAAU,KCCpBuB,EAAA","file":"popover.min.js","sourcesContent":[null,"'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$popover', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      customClass: '',\r\n      // uncommenting the next two lines will break backwards compatability\r\n      // prefixClass: 'popover',\r\n      // prefixEvent: 'popover',\r\n      container: false,\r\n      target: false,\r\n      placement: 'right',\r\n      template: 'popover/popover.tpl.html',\r\n      contentTemplate: false,\r\n      trigger: 'click',\r\n      keyboard: true,\r\n      html: false,\r\n      title: '',\r\n      content: '',\r\n      delay: 0,\r\n      autoClose: false\r\n    };\r\n\r\n    this.$get = function($tooltip) {\r\n\r\n      function PopoverFactory(element, config) {\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        var $popover = $tooltip(element, options);\r\n\r\n        // Support scope as string options [/*title, */content]\r\n        if(options.content) {\r\n          $popover.$scope.content = options.content;\r\n        }\r\n\r\n        return $popover;\r\n\r\n      }\r\n\r\n      return PopoverFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsPopover', function($window, $sce, $popover) {\r\n\r\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'delay', 'trigger', 'html', 'animation', 'customClass', 'autoClose', 'id', 'prefixClass', 'prefixEvent'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['html', 'container', 'autoClose'], function(key) {\r\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\r\n            options[key] = false;\r\n        });\r\n\r\n        // should not parse target attribute (anchor tag), only data-target #1454\r\n        var dataTarget = element.attr('data-target');\r\n        if(angular.isDefined(dataTarget)) {\r\n          if(falseValueRegExp.test(dataTarget))\r\n            options.target = false;\r\n          else\r\n            options.target = dataTarget;\r\n        }\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function(key) {\r\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\r\n            scope[key] = $sce.trustAsHtml(newValue);\r\n            angular.isDefined(oldValue) && requestAnimationFrame(function() {\r\n              popover && popover.$applyPlacement();\r\n            });\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsPopover && scope.$watch(attr.bsPopover, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.content = newValue;\r\n          }\r\n          angular.isDefined(oldValue) && requestAnimationFrame(function() {\r\n            popover && popover.$applyPlacement();\r\n          });\r\n        }, true);\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!popover || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\r\n          newValue === true ? popover.show() : popover.hide();\r\n        });\r\n\r\n        // Viewport support\r\n        attr.viewport && scope.$watch(attr.viewport, function (newValue) {\r\n          if(!popover || !angular.isDefined(newValue)) return;\r\n          popover.setViewport(newValue);\r\n        });\r\n\r\n        // Initialize popover\r\n        var popover = $popover(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (popover) popover.destroy();\r\n          options = null;\r\n          popover = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}