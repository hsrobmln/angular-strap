{"version":3,"sources":["select.min.js","select/select.js"],"names":["angular","module","provider","defaults","this","animation","prefixClass","prefixEvent","placement","template","trigger","container","keyboard","html","delay","multiple","allNoneButtons","sort","caretHtml","placeholder","allText","noneText","maxLength","maxLengthHtml","iconCheckmark","$get","$window","$document","$rootScope","$tooltip","$timeout","SelectFactory","element","controller","config","$select","options","extend","scope","$scope","$matches","$activeIndex","$isMultiple","$showAllNoneButtons","$iconCheckmark","$allText","$noneText","$activate","index","$$postDigest","activate","evt","select","$isVisible","$isActive","$selectAll","i","length","$selectNone","update","matches","$updateActiveIndex","splice","indexOf","push","value","$apply","$setViewValue","map","hide","$emit","$modelValue","isArray","$getIndex","minLength","$viewValue","l","$onMouseDown","preventDefault","stopPropagation","isTouch","targetEl","target","triggerHandler","$onKeyDown","test","keyCode","isUndefined","$digest","_show","show","$element","addClass","on","_hide","off","isNative","document","body","navigator","userAgent","directive","$parse","$q","$parseOptions","restrict","require","link","attr","forEach","key","isDefined","falseValueRegExp","dataMultiple","nodeName","toLowerCase","inputEl","css","after","parsedOptions","bsOptions","watchedOptions","$match","replace","trim","$watchCollection","newValue","oldValue","valuesFn","then","values","$render","$watch","ngModel","selected","label","filter","join","$isEmpty","$on","destroy"],"mappings":"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","file":"select.min.js","sourcesContent":[null,"'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\r\n\r\n  .provider('$select', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'select',\r\n      prefixEvent: '$select',\r\n      placement: 'bottom-left',\r\n      template: 'select/select.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      multiple: false,\r\n      allNoneButtons: false,\r\n      sort: true,\r\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\r\n      placeholder: 'Choose among the following...',\r\n      allText: 'All',\r\n      noneText: 'None',\r\n      maxLength: 3,\r\n      maxLengthHtml: 'selected',\r\n      iconCheckmark: 'glyphicon glyphicon-ok'\r\n    };\r\n\r\n    this.$get = function($window, $document, $rootScope, $tooltip, $timeout) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n      var isTouch = ('createTouch' in $window.document) && isNative;\r\n\r\n      function SelectFactory(element, controller, config) {\r\n\r\n        var $select = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $select = $tooltip(element, options);\r\n        var scope = $select.$scope;\r\n\r\n        scope.$matches = [];\r\n        if (options.multiple) {\r\n          scope.$activeIndex = [];\r\n        }\r\n        else {\r\n          scope.$activeIndex = -1;\r\n        }\r\n        scope.$isMultiple = options.multiple;\r\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\r\n        scope.$iconCheckmark = options.iconCheckmark;\r\n        scope.$allText = options.allText;\r\n        scope.$noneText = options.noneText;\r\n\r\n        scope.$activate = function(index) {\r\n          scope.$$postDigest(function() {\r\n            $select.activate(index);\r\n          });\r\n        };\r\n\r\n        scope.$select = function(index, evt) {\r\n          scope.$$postDigest(function() {\r\n            $select.select(index);\r\n          });\r\n        };\r\n\r\n        scope.$isVisible = function() {\r\n          return $select.$isVisible();\r\n        };\r\n\r\n        scope.$isActive = function(index) {\r\n          return $select.$isActive(index);\r\n        };\r\n\r\n        scope.$selectAll = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (!scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        scope.$selectNone = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $select.update = function(matches) {\r\n          scope.$matches = matches;\r\n          $select.$updateActiveIndex();\r\n        };\r\n\r\n        $select.activate = function(index) {\r\n          if(options.multiple) {\r\n            $select.$isActive(index) ? scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1) : scope.$activeIndex.push(index);\r\n            if(options.sort) scope.$activeIndex.sort();\r\n          } else {\r\n            scope.$activeIndex = index;\r\n          }\r\n          return scope.$activeIndex;\r\n        };\r\n\r\n        $select.select = function(index) {\r\n          var value = scope.$matches[index].value;\r\n          scope.$apply(function() {\r\n            $select.activate(index);\r\n            if(options.multiple) {\r\n              controller.$setViewValue(scope.$activeIndex.map(function(index) {\r\n                return scope.$matches[index].value;\r\n              }));\r\n            } else {\r\n              controller.$setViewValue(value);\r\n              // Hide if single select\r\n              $select.hide();\r\n            }\r\n          });\r\n          // Emit event\r\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $select.$updateActiveIndex = function() {\r\n          if(controller.$modelValue && scope.$matches.length) {\r\n            if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n              scope.$activeIndex = controller.$modelValue.map(function(value) {\r\n                return $select.$getIndex(value);\r\n              });\r\n            } else {\r\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\r\n            }\r\n          } else if(scope.$activeIndex >= scope.$matches.length) {\r\n            scope.$activeIndex = options.multiple ? [] : 0;\r\n          }\r\n        };\r\n\r\n        $select.$isVisible = function() {\r\n          if(!options.minLength || !controller) {\r\n            return scope.$matches.length;\r\n          }\r\n          // minLength support\r\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\r\n        };\r\n\r\n        $select.$isActive = function(index) {\r\n          if(options.multiple) {\r\n            return scope.$activeIndex.indexOf(index) !== -1;\r\n          } else {\r\n            return scope.$activeIndex === index;\r\n          }\r\n        };\r\n\r\n        $select.$getIndex = function(value) {\r\n          var l = scope.$matches.length, i = l;\r\n          if(!l) return;\r\n          for(i = l; i--;) {\r\n            if(scope.$matches[i].value === value) break;\r\n          }\r\n          if(i < 0) return;\r\n          return i;\r\n        };\r\n\r\n        $select.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown on .dropdown-menu\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Emulate click for mobile devices\r\n          if(isTouch) {\r\n            var targetEl = angular.element(evt.target);\r\n            targetEl.triggerHandler('click');\r\n          }\r\n        };\r\n\r\n        $select.$onKeyDown = function(evt) {\r\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // release focus on tab\r\n          if (options.multiple && evt.keyCode === 9) {\r\n            return $select.hide();\r\n          }\r\n\r\n          // Select with enter\r\n          if(!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\r\n            return $select.select(scope.$activeIndex);\r\n          }\r\n\r\n          if (!options.multiple) {\r\n            // Navigate with keyboard\r\n            if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\r\n            else if(evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\r\n            else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\r\n            else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\r\n            scope.$digest();\r\n          }\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var _show = $select.show;\r\n        $select.show = function() {\r\n          _show();\r\n          if(options.multiple) {\r\n            $select.$element.addClass('select-multiple');\r\n          }\r\n          // use timeout to hookup the events to prevent\r\n          // event bubbling from being processed imediately.\r\n          $timeout(function() {\r\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $select.$onKeyDown);\r\n            }\r\n          }, 0, false);\r\n        };\r\n\r\n        var _hide = $select.hide;\r\n        $select.hide = function() {\r\n          if(!options.multiple && !controller.$modelValue) {\r\n            scope.$activeIndex = -1;\r\n          }\r\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $select.$onKeyDown);\r\n          }\r\n          _hide(true);\r\n        };\r\n\r\n        return $select;\r\n\r\n      }\r\n\r\n      SelectFactory.defaults = defaults;\r\n      return SelectFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsSelect', function($window, $parse, $q, $select, $parseOptions) {\r\n\r\n    var defaults = $select.defaults;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, placeholder: defaults.placeholder};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'placeholder', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml', 'prefixClass', 'prefixEvent'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['html', 'container', 'allNoneButtons', 'sort'], function(key) {\r\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\r\n            options[key] = false;\r\n        });\r\n\r\n        // Only parse data-multiple. Angular sets existence attributes to true (multiple/required/etc), they apply this\r\n        // to data-multiple as well for some reason, so we'll parse this ourselves and disregard multiple\r\n        var dataMultiple = element.attr('data-multiple');\r\n        if(angular.isDefined(dataMultiple)) {\r\n          if(falseValueRegExp.test(dataMultiple))\r\n            options.multiple = false;\r\n          else\r\n            options.multiple = dataMultiple;\r\n        }\r\n\r\n        // Add support for select markup\r\n        if(element[0].nodeName.toLowerCase() === 'select') {\r\n          var inputEl = element;\r\n          inputEl.css('display', 'none');\r\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\r\n          inputEl.after(element);\r\n        }\r\n\r\n        // Build proper bsOptions\r\n        var parsedOptions = $parseOptions(attr.bsOptions);\r\n\r\n        // Initialize select\r\n        var select = $select(element, controller, options);\r\n\r\n        // Watch bsOptions values before filtering for changes\r\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\r\n        scope.$watchCollection(watchedOptions, function(newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\r\n          parsedOptions.valuesFn(scope, controller)\r\n          .then(function(values) {\r\n            select.update(values);\r\n            controller.$render();\r\n          });\r\n        });\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\r\n          select.$updateActiveIndex();\r\n          controller.$render();\r\n        }, true);\r\n\r\n        // Model rendering in view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          var selected, index;\r\n          if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n            selected = controller.$modelValue.map(function(value) {\r\n              index = select.$getIndex(value);\r\n              return angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n            }).filter(angular.isDefined);\r\n            if(selected.length > (options.maxLength || defaults.maxLength)) {\r\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\r\n            } else {\r\n              selected = selected.join(', ');\r\n            }\r\n          } else {\r\n            index = select.$getIndex(controller.$modelValue);\r\n            selected = angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n          }\r\n          element.html((selected ? selected : options.placeholder) + (options.caretHtml ? options.caretHtml : defaults.caretHtml));\r\n        };\r\n\r\n        if(options.multiple){\r\n          controller.$isEmpty = function(value){\r\n            return !value || value.length === 0;\r\n          };\r\n        }\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (select) select.destroy();\r\n          options = null;\r\n          select = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}